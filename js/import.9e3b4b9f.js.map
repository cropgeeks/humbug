{"version":3,"file":"js/import.9e3b4b9f.js","mappings":"mIAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,cAAc,CAACE,YAAY,QAAQ,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,uBAAuBL,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQR,EAAIO,GAAG,wBAAwB,YAAY,iBAAiB,CAACL,EAAG,gBAAgB,CAACM,MAAM,CAAC,QAAUR,EAAIS,aAAa,GAAK,gBAAgBC,MAAM,CAACC,MAAOX,EAAIY,YAAaC,SAAS,SAAUC,GAAMd,EAAIY,YAAYE,CAAG,EAAEC,WAAW,kBAAkB,GAAGb,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQR,EAAIO,GAAG,qBAAqB,YAAY,aAAa,CAACL,EAAG,kBAAkB,CAACM,MAAM,CAAC,KAAOR,EAAIgB,SAASC,OAAO,SAAW,MAAM,GAAK,YAAYP,MAAM,CAACC,MAAOX,EAAIkB,cAAeL,SAAS,SAAUC,GAAMd,EAAIkB,cAAcJ,CAAG,EAAEC,WAAW,oBAAoB,GAAGb,EAAG,IAAI,CAACF,EAAIK,GAAGL,EAAIM,GAAGN,EAAIO,GAAG,sBAAsBL,EAAG,WAAW,CAACiB,GAAG,CAAC,MAAQnB,EAAIoB,cAAc,CAAClB,EAAG,oBAAoBF,EAAIK,GAAG,IAAIL,EAAIM,GAAGN,EAAIO,GAAG,gBAAgB,GAAGP,EAAIK,GAAG,KAAKH,EAAG,WAAW,CAACiB,GAAG,CAAC,MAAQnB,EAAIqB,kBAAkB,CAACnB,EAAG,iBAAiBF,EAAIK,GAAG,IAAIL,EAAIM,GAAGN,EAAIO,GAAG,kBAAkB,MAAM,IAAI,EACtgC,EACIe,EAAkB,G,UCgBtB,SACAC,WAAAA,CACAC,iBAAAA,EAAAA,IACAC,cAAAA,EAAAA,KAEAC,KAAAA,WACA,OACAV,SAAAA,GACAJ,YAAAA,UACAM,cAAAA,KAEA,EACAS,MAAAA,CACAT,cAAAA,SAAAA,GACA,4EACA,GAEAU,QAAAA,CACAR,YAAAA,WACA,0DACA,CACAS,KAAAA,EACAC,KAAAA,KAAAA,YACAC,KAAAA,KAAAA,cAIA,mBAAAC,KAAAA,QACA,EACAX,gBAAAA,WACA,0DACA,CACAQ,KAAAA,EACAC,KAAAA,KAAAA,YACAC,KAAAA,KAAAA,cAIA,mBAAAC,KAAAA,QACA,GAEAC,QAAAA,WACA,kCACA,6CAEA,gCACA,mBAEA,CACA,6BACA,6CACA,qHACA,4CACA,0DAGA,GC1EqP,I,cCOjPC,GAAY,OACd,EACAnC,EACAuB,GACA,EACA,KACA,KACA,MAIF,QAAeY,EAAiB,O","sources":["webpack://humbug/./src/views/Import.vue","webpack://humbug/src/views/Import.vue","webpack://humbug/./src/views/Import.vue?a19f","webpack://humbug/./src/views/Import.vue?9434"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-container',{staticClass:\"mt-3\"},[_c('h1',[_vm._v(_vm._s(_vm.$t('pageTitleImport')))]),_c('b-form-group',{attrs:{\"label\":_vm.$t('formLabelBarcodeType'),\"label-for\":\"barcode-type\"}},[_c('b-form-select',{attrs:{\"options\":_vm.barcodeTypes,\"id\":\"barcode-type\"},model:{value:(_vm.barcodeType),callback:function ($$v) {_vm.barcodeType=$$v},expression:\"barcodeType\"}})],1),_c('b-form-group',{attrs:{\"label\":_vm.$t('formLabelBarcodes'),\"label-for\":\"barcodes\"}},[_c('b-form-textarea',{attrs:{\"rows\":_vm.barcodes.length,\"debounce\":\"500\",\"id\":\"barcodes\"},model:{value:(_vm.barcodeString),callback:function ($$v) {_vm.barcodeString=$$v},expression:\"barcodeString\"}})],1),_c('p',[_vm._v(_vm._s(_vm.$t('pageTextImport')))]),_c('b-button',{on:{\"click\":_vm.addBarcodes}},[_c('BIconJournalPlus'),_vm._v(\" \"+_vm._s(_vm.$t('buttonAdd')))],1),_vm._v(\" \"),_c('b-button',{on:{\"click\":_vm.replaceBarcodes}},[_c('BIconJournalX'),_vm._v(\" \"+_vm._s(_vm.$t('buttonReplace'))+\" \")],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-container class=\"mt-3\">\n    <h1>{{ $t('pageTitleImport') }}</h1>\n    <b-form-group :label=\"$t('formLabelBarcodeType')\" label-for=\"barcode-type\">\n      <b-form-select :options=\"barcodeTypes\" v-model=\"barcodeType\" id=\"barcode-type\" />\n    </b-form-group>\n    <b-form-group :label=\"$t('formLabelBarcodes')\" label-for=\"barcodes\">\n      <b-form-textarea v-model=\"barcodeString\" :rows=\"barcodes.length\" debounce=\"500\" id=\"barcodes\" />\n    </b-form-group>\n\n    <p>{{ $t('pageTextImport') }}</p>\n    <b-button @click=\"addBarcodes\"><BIconJournalPlus /> {{ $t('buttonAdd') }}</b-button> <b-button @click=\"replaceBarcodes\"><BIconJournalX /> {{ $t('buttonReplace') }} </b-button>\n  </b-container>\n</template>\n\n<script>\nimport { BIconJournalPlus, BIconJournalX } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BIconJournalPlus,\n    BIconJournalX\n  },\n  data: function () {\n    return {\n      barcodes: [],\n      barcodeType: 'CODE128',\n      barcodeString: null\n    }\n  },\n  watch: {\n    barcodeString: function (newValue) {\n      this.barcodes = newValue.split('\\n').map(s => s.trim()).filter(s => s !== null && s !== '')\n    }\n  },\n  methods: {\n    addBarcodes: function () {\n      this.$store.dispatch('addBarcodes', this.barcodes.map(b => {\n        return {\n          text: b,\n          type: this.barcodeType,\n          uuid: this.uuidv4()\n        }\n      }))\n\n      this.$router.push({ name: 'home' })\n    },\n    replaceBarcodes: function () {\n      this.$store.dispatch('setBarcodes', this.barcodes.map(b => {\n        return {\n          text: b,\n          type: this.barcodeType,\n          uuid: this.uuidv4()\n        }\n      }))\n\n      this.$router.push({ name: 'home' })\n    }\n  },\n  mounted: function () {\n    if (this.$route.query.barcodeType) {\n      const type = this.$route.query.barcodeType.trim()\n\n      if (this.barcodeTypes.includes(type)) {\n        this.barcodeType = type\n      }\n    }\n    if (this.$route.query.barcodes) {\n      if (typeof this.$route.query.barcodes === 'string') {\n        this.barcodeString = this.$route.query.barcodes.split(',').map(s => s.trim()).filter(s => s !== null && s !== '').join('\\n')\n      } else if (Array.isArray(this.$route.query.barcodes)) {\n        this.barcodeString = this.$route.query.barcodes.join('\\n')\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Import.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Import.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Import.vue?vue&type=template&id=361cc023\"\nimport script from \"./Import.vue?vue&type=script&lang=js\"\nexport * from \"./Import.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","$t","attrs","barcodeTypes","model","value","barcodeType","callback","$$v","expression","barcodes","length","barcodeString","on","addBarcodes","replaceBarcodes","staticRenderFns","components","BIconJournalPlus","BIconJournalX","data","watch","methods","text","type","uuid","name","mounted","component"],"sourceRoot":""}